name: solar system
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - features
env:
  MONGO_URI: "mongodb+srv://supercluster.d83jj.mongodb.net/superData"
  MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}

jobs:
  unit_testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [18]
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout Registry
        uses: actions/checkout@v4

      - name: Node JS Setups
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.nodejs_version}}
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}

      - name: Install Dependencies
        run: npm install

      - name: Unit testing
        run: npm test

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: Test-Result-${{ matrix.nodejs_version }}-${{ matrix.os }}
          path: test-results.xml

  code_coverage:
    name: Code Coverage
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Registry
        uses: actions/checkout@v4

      - name: Node JS Setups
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}

      - name: Install Dependencies
        run: npm install

      - name: Check Code Coverage
        run: npm run coverage
        id: node-code-coverage
      #  continue-on-error: true

      - name: Archive coverage results
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 1
        if: failure() || steps.node-code-coverage.outcome == 'failure' || steps.node-code-coverage.outcome == 'success'

  docker_image:
    runs-on: ubuntu-latest
    needs: [code_coverage, unit_testing]
    steps:
      - name: Login to docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker docker
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Docker Image Check
        run: |
          docker images
          docker run --rm --name solar-system -d \
            -p 3000:3000 \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}


          echo "Testing image URL"
          wget -q -O - 127.0.0.1:3000/live | grep live
          echo "Stopping the container"
          docker stop solar-system

      - name: Docker Image push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
