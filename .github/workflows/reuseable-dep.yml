name: Reusable workflow
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        default: Dev
        type: string
      MANIFEST_PATH:
        default: kubernetes/development
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      MONGO_PASSWORD:
        required: true
    outputs:
      APP_URL:
        value: ${{jobs.dev_deploy.outputs.APP_URL}}
jobs:
  dev_deploy:
    environment:
      name: ${{inputs.ENVIRONMENT}}
      url: http://${{steps.fetch-alb.outputs.APP_URL}}
    runs-on: ubuntu-latest
    outputs:
      APP_URL: ${{steps.fetch-alb.outputs.APP_URL}}
    steps:
      - name: Checkout Registry
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: installing kubectl
        uses: azure/setup-kubectl@v4

      - name: Kubectl Config update
        run: |
          aws eks update-kubeconfig --name eksdemo1
          cat ~/.kube/config

      - name: Replace placeholders
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: "_{_"
          tokenSuffix: "_}_"
          files: '["${{inputs.MANIFEST_PATH}}/*.yaml"]'
        env:
          NAMESPACE: ${{vars.NAMESPACE}}
          REPLICAS: ${{vars.REPLICAS}}
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Creating secret
        run: |
          kubectl create ns ${{vars.NAMESPACE}} --dry-run -o yaml | kubectl apply -f -
          kubectl -n ${{vars.NAMESPACE}} create secret generic mongo-db-creds \
          --from-literal=MONGO_URI="${{vars.MONGO_URI}}" \
          --from-literal=MONGO_USERNAME="${{vars.MONGO_USERNAME}}" \
          --from-literal=MONGO_PASSWORD="${{secrets.MONGO_PASSWORD}}" \
          --dry-run=client -o yaml | kubectl apply -f -

      - name: deploying
        run: kubectl apply -f ${{inputs.MANIFEST_PATH}}



      - name: Fetching LB Address
        id: fetch-alb
        run: |
          sleep 15s
          echo "APP_URL= $(kubectl -n ${{vars.NAMESPACE}} get ingress solar-system -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')" >> $GITHUB_OUTPUT
